@model IEnumerable<ProjectCachoeiro.Web.Comercial.Contato>
@{
    ViewData["Title"] = "Contatos";
    ViewData["LOGIC"] = "UWP";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-9">
        <div class="toolbar">
            <div class="left">
                <h2>Contatos</h2>
            </div>
            <div class="right">
                <a asp-action="Criar" class="btn"><i class="fa fa-plus"></i> Criar novo</a>
            </div>
            <div class="clean"></div>
        </div>
            @(Html.Kendo().Grid<ProjectCachoeiro.Web.Comercial.Contato>()
                .Name("Contato").Columns(col =>
                {
                    col.Bound(c => c.PrimeiroNome);
                    col.Bound(c => c.Email);
                    col.Command(command =>
                    {
                        command.Edit().Text("Alterar").CancelText("Cancelar").UpdateText("Salvar");
                        command.Custom("Edit").Text("Editar").Click("openEdit").IconClass("k-icon k-i-hyperlink-open");
                        command.Custom("Details").Text("Mais").Click("openDetails").IconClass("k-icon k-i-hyperlink");
                        command.Destroy().Text("Apagar");
                    }).Width(375);
                })
                .Sortable().Filterable(mess =>
                                            {
                                                mess.Operators(ope =>
                                                {
                                                    ope.ForDate(str => str.IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsLessThanOrEqualTo("é menor ou igual").IsLessThan("é menor que").IsGreaterThanOrEqualTo("é maior ou igual a").IsGreaterThan("é maior que").IsEqualTo("é igual a"));
                                                    ope.ForEnums(str => str.IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsEqualTo("é igual a"));
                                                    ope.ForNumber(str => str.IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsLessThanOrEqualTo("é menor ou igual").IsLessThan("é menor que").IsGreaterThanOrEqualTo("é maior ou igual a").IsGreaterThan("é maior que").IsEqualTo("é igual a"));
                                                    ope.ForString(str => str.StartsWith("começa com").Contains("contem").DoesNotContain("não contem").EndsWith("termina com").IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsNotEmpty("não em branco").IsEqualTo("é igual a").IsNotEqualTo("não é igual a").IsEmpty("esta em branco"));
                                                });
                                                mess.Messages(c => { c.Clear("Limpar"); c.And("e"); c.Cancel("Cancelar"); c.IsFalse("é falso"); c.IsTrue("é verdadeiro"); c.Or("ou"); c.Search("Pesquisar"); c.SelectValue("Selecionar valor"); c.Filter("Filtrar"); c.SelectValue("Selecionar"); c.Info("Mostrar itens que"); });
                                            })
                .Pageable(page => page.Refresh(true).ButtonCount(5)
                    .Messages(c =>
                    {
                        c.ItemsPerPage("Itens por página");
                        c.Last("Último");
                        c.Next("Próximo");
                        c.First("Primeira");
                        c.Refresh("Recarregar");
                        c.Display("{0} - {1} de {2} itens");
                    }))
                .DataSource(data => data.Ajax().ServerOperation(false).Events(events => events.Error("error_handler")).Model(model => model.Id(p => p.Id))
                    .Read(read => read.Action("Read", "Contato"))
                    .Update("Update", "Contato")
                    .Destroy("Destroy", "Contato")))
    </div>
    <div class="info-bar col-md-3">
        @{
            OtherOptions otherOptions = new OtherOptions
            {
                Descricao = "Veja opções relacionadas com a apresentação de itens.",
                FeedbackEChamadoID = "ListaDeContatos",
                OpcoesRelacionadas = new Links[] {
                    new Links{
                        Titulo = "Adicionar contato",
                        Url = "/Contatoes/Create"
                    },
                    new Links{
                        Titulo = "Adicionar estado de produto",
                        Url = "/Estados/Create"
                    },
                    new Links{
                        Titulo = "Adicionar produto",
                        Url = "/Produtos/Create"
                    }
                }
            };
        }
        @Html.Partial("AppOtherOptions", otherOptions)
    </div>
</div>