<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtAbout.Text" xml:space="preserve">
    <value>Sobre</value>
  </data>
  <data name="txtBand.Text" xml:space="preserve">
    <value>Banda de Microsoft</value>
  </data>
  <data name="txtHelp.Text" xml:space="preserve">
    <value>Ajuda</value>
  </data>
  <data name="txtHome.Text" xml:space="preserve">
    <value>Página Inicial</value>
  </data>
  <data name="txtSettings.Text" xml:space="preserve">
    <value>Configurações</value>
  </data>
  <data name="ErroIgualValueDescription" xml:space="preserve">
    <value>Os valores inseridos são iguais. Por favor, altere um destes valores. Ou mudar o comando para permitir valores decimais.</value>
  </data>
  <data name="ErroIgualValueTitle" xml:space="preserve">
    <value>Os valores inseridos são iguais.</value>
  </data>
  <data name="ErroMinDescription" xml:space="preserve">
    <value>O valor mínimo é maior que o valor máximo. Por favor conserte!</value>
  </data>
  <data name="ErroMinTitle" xml:space="preserve">
    <value>Valor mínimo é maior que o máximo.</value>
  </data>
  <data name="ErroFormatExeptionDescription" xml:space="preserve">
    <value>Plese, verifique o número escrito, porque algo deu errado. Certifique-se de que você usou apenas um "."ou",". Ambos ("."ou",") não é permitido.</value>
  </data>
  <data name="ErroFormatExeptionTitle" xml:space="preserve">
    <value>O formato está errado</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Não raras ocasiões onde precisamos doar a que alguém com este aplicativo é fácil. Basta adicionar os números de faixas para serem desenhados e fará o trabalho para você. Experimentá-lo.</value>
    <comment>Não é raro ocasiões onde precisamos sortear alguém, com esse aplicativo fica fácil. Basta adicionar a faixa de números a serem sorteados e ele fará o trabalho para você. Experimente.</comment>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>42 aleatório</value>
  </data>
  <data name="GetToKnowMe.Text" xml:space="preserve">
    <value>Te conhecer eu e meus outros apps, visitando meu site.</value>
  </data>
  <data name="GoToSite.Content" xml:space="preserve">
    <value>Visite o meu site</value>
  </data>
  <data name="MSBand.Text" xml:space="preserve">
    <value>Você pode conectar este app com Microsoft Band 2, e ele estará com você onde quer que vá.</value>
  </data>
  <data name="RateInTheStore.Text" xml:space="preserve">
    <value>Fazer alguém feliz por popularidade este app na loja. ;)</value>
  </data>
  <data name="RateIt.Content" xml:space="preserve">
    <value>Avaliá-lo e fazer alguém feliz</value>
  </data>
  <data name="SendFeedbackBtn.Content" xml:space="preserve">
    <value>Enviar comentários</value>
  </data>
  <data name="Sendfeedback.Text" xml:space="preserve">
    <value>Por favor envie você feedback sobre este app. Vou corrigir cada bug e escutarei suas ideias em como fazer este app melhor.</value>
  </data>
  <data name="SetUpNewNumber.Text" xml:space="preserve">
    <value>Você pode configurar um valor mínimo e um valor máximo. 
Alguns exemplos para você: 4, 8,15, 16.2342, 108.54</value>
  </data>
  <data name="Timer.Text" xml:space="preserve">
    <value>Você pode definir um temporizador para alterar o número de cada segundo, ou você pode definir quantos segundos Esperem até escolher um novo número.</value>
  </data>
</root>