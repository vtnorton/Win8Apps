@model ProjectCachoeiro.Web.Comercial.Proposta

@{
    ViewData["Title"] = "Adicionar proposta";
    ViewData["LOGIC"] = "UWP";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (ViewData["posted"] != null)
{
    if (ViewData["posted"].ToString() == "true")
    {
        <script>
            $("#detalhes").removeClass("view-opened");
            $("#detalhes").addClass("view-closed", 1000);
            $("#detalhes").addClass("view-passed");
            $("#itens").removeClass("view-closed");
            $("#itens").addClass("view-opened", 1000);
        </script>
    }
    <script>
        function createProposta() {
            nextStep('#itens', '#detalhes');
            //TODO: salvar dados novos
        }
    </script>
}
else
{
    <script>
        function createProposta() {
            //nextStep('#itens', '#detalhes');
            if ($("#form").valid()) {
                $("#form").submit();
            }
        }
    </script>
}

<div class="row">
    <div class="col-md-9">
        <div class="toolbar">
            <div class="left">
                <h2>Adicionar proposta</h2>
            </div>
            <div class="clean"></div>
        </div>
        <div id="detalhes" class="view-element view-opened">
            <h4>Detalhes da proposta</h4>
            <hr />
            <div class="view-content">
                <form id="form" asp-action="Criar">
                    <div asp-validation-summary="ModelOnly"></div>
                    <div class="row">
                        <div class="col-md-5">
                            <label asp-for="Numero"></label>
                            <input asp-for="Numero" />
                            <span asp-validation-for="Numero"></span>
                        </div>
                        <div class="col-md-5">
                            <label>Cliente</label>
                            @(Html.Kendo().DropDownListFor(model => model.IdCliente).DataValueField("Id").Filter(FilterType.Contains).OptionLabel("Selecione um cliente...").DataTextField("GetName").BindTo((System.Collections.IEnumerable)ViewData["clientes"]))
                            <span asp-validation-for="IdCliente"></span>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="span5 col-md-5">
                            <label>Contato</label>
                            @(Html.Kendo().DropDownListFor(model => model.IdContato).DataValueField("Id").DataTextField("GetName").BindTo((System.Collections.IEnumerable)ViewData["contatos"]))
                            <span asp-validation-for="IdContato"></span>
                        </div>
                    </div>*@
                    <div class="row">
                        <div class="col-md-6">
                            <label asp-for="IdOpcoesDePagamento"></label>
                            @(Html.Kendo().DropDownListFor(model => model.IdOpcoesDePagamento).DataValueField("Id").DataTextField("Nome").BindTo((System.Collections.IEnumerable)ViewData["pagamento"]))
                            <span asp-validation-for="IdOpcoesDePagamento"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <label asp-for="Observacoes"></label>
                            <textarea asp-for="Observacoes"></textarea>
                            <span asp-validation-for="Observacoes"></span>
                        </div>
                    </div>
                </form>
                <hr />
                <div class="right">
                    <a class="btn" onclick="createProposta();"><i class="fa fa-arrow-right"></i> Confirmar</a>
                </div>
                <div class="clean"></div>
            </div>
        </div>

        <div id="itens" class="view-element view-closed">
            <h4>Itens da proposta</h4>
            <hr />
            <div class="view-content">
                <p>Selecione os itens que farão parte desta proposta.</p>

                @(Html.Kendo().Grid<ProjectCachoeiro.Web.Models.Produtos.Produto>().Name("Produtos").Columns(col =>
                    {
                        col.Select().Width(50);
                        col.Bound(c => c.GetName).Title("Nome");
                        col.ForeignKey(c => c.IdStatus, (System.Collections.IEnumerable)ViewData["estado"], "Id", "Nome").Title("Estado");
                        col.ForeignKey(c => c.IdMaterial, (System.Collections.IEnumerable)ViewData["material"], "Id", "Nome").Title("Material");
                        col.ForeignKey(c => c.IdTipo, (System.Collections.IEnumerable)ViewData["tipo"], "Id", "Nome").Title("Tipo");
                        col.Bound(c => c.GetPreco).Title("Preço");
                    }).Sortable().Navigatable().Filterable().Events(ev => ev.Change("onChange"))
                        .ClientDetailTemplateId("TemplateDetalhesIndividual").PersistSelection()
                        .Pageable(page => page.Refresh(true).ButtonCount(5)
                        .Messages(c => { c.ItemsPerPage("Itens por página"); c.Last("Último"); c.Next("Próximo"); c.First("Primeira"); c.Refresh("Recarregar"); c.Display("{0} - {1} de {2} itens"); }))
                        .DataSource(data => data.Ajax().PageSize(20).ServerOperation(false).Events(events => events.Error("error_handler")).Model(model => model.Id(p => p.Id))
                            .Read(read => read.Action("Read", "Produtos"))))

                @await Html.PartialAsync("~/Views/Shared/Templates/GridProduct_DetalhesIndividual.cshtml")

                <hr />
                <div class="left">
                    <a class="btn btn-link" onclick="nextStep('#detalhes', '#itens')"><i class="fa fa-arrow-left"></i> Voltar</a>
                    <a class="btn btn-link" href="/Propostas"><i class="fa fa-list-ul"></i> Lista de propostas</a>
                </div>
                <div class="right">
                    <a class="btn btn-success" id="btnAddItens"><i class="fa fa-save"></i> Adicionar itens</a>
                </div>
                <div class="clean"></div>
            </div>
        </div>
    </div>
    <div class="info-bar col-md-3">
        @{
            OtherOptions otherOptions = new OtherOptions
            {
                Descricao = "Veja opções relacionadas com a apresentação de itens.",
                FeedbackEChamadoID = "ItemFamilia",
                OpcoesRelacionadas = new Links[] {
                    new Links{
                        Titulo = "Adicionar família",
                        Url = "/Familias/Create"
                    },
                    new Links{
                        Titulo = "Adicionar estado de produto",
                        Url = "/Estados/Create"
                    },
                    new Links{
                        Titulo = "Adicionar produto",
                        Url = "/Produtos/Create"
                    }
                }
            };
        }
        @Html.Partial("AppOtherOptions", otherOptions)
    </div>
</div>
@if (ViewData["id"] != null)
{
    <script>
        var IdProp = @ViewData["id"];
    </script>
}

<script>
    //TODO: Additionally in the demo you can see how to persist selected items across pages. This is achieved by enabling the persistSelection as follows .PersistSelection().
    var itens = [];

    function onChange(arg) {
        itens = this.selectedKeyNames();
    }

    $("#btnAddItens").click(function (e) {
        e.preventDefault();
        $.ajax({
            type: "POST",
            url: "/AddItens",
            data: {
                IdProposta: IdProp,
                Ids: itens
            },
            success: window.location.href = "/Propostas/Edit/" + IdProp,
            dataType: "json",
            traditional: true
        });
    });
</script>

@if (ViewData["posted"] != null)
{
    if (ViewData["posted"].ToString() == "true")
    {
        <script>
            $("#detalhes").removeClass("view-opened");
            $("#detalhes").addClass("view-closed", 1000);
            $("#detalhes").addClass("view-passed");
            $("#itens").removeClass("view-closed");
            $("#itens").addClass("view-opened", 1000);
        </script>
    }
}