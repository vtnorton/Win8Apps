@using ProjectCachoeiro.Web.Comercial
@model ProjectCachoeiro.Web.Comercial.Proposta

@{
    ViewData["Title"] = "Proposta";
    ViewData["LOGIC"] = "UWP";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //TODO: Cliente em proposta
    //Cliente cliente = ViewData["clientedaproposta"] as Cliente;
}
<div class="row">
    <div class="col-md-9">
        <div class="toolbar">
            <div class="left">
                <h2>Proposta</h2>
            </div>
            <div class="clean"></div>
        </div>
        <div class="view-element">
            <div class="row">
                <div class="col-md-7 col-sm-6">
                    @*<h6>Cliente: @cliente.RazaoSocial</h6>
                        <p>
                            CNPJ: @cliente.CNPJ <br />
                            Contato: @cliente.EmailContato / @cliente.Telefone <br />
                            Endereço: @cliente.GetEndereco
                        </p>*@

                    @if (!string.IsNullOrEmpty(Html.DisplayFor(model => model.Observacoes).ToString()))
                    {
                        <h6>Observações</h6>
                        <p>@Html.DisplayFor(model => model.Observacoes)</p>
                        <br />
                    }

                    <h6>Opções de pagamento</h6>
                    <p>
                        @ViewData["pagamentodetails"]
                    </p>
                </div>
                <div class="col-md-5 col-sm-6">
                    <h4>Registros</h4>
                    <p>Conheça os detalhes do cadastro e de possíveis alterações realizadas neste item.</p>
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.DateCreated)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.DateCreated)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.UserCreated)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.UserCreated)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.DateModified)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.DateModified)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.UserModified)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.UserModified)
                        </dd>
                    </dl>
                </div>
            </div>
            @await Html.PartialAsync("~/Views/Shared/AppTaskbar.cshtml", "VIEW;PROPOSTA;ID=" + Model.Id + ";")
        </div>
        @(Html.Kendo().Grid<ProjectCachoeiro.Web.Comercial.Item>().Name("Itens").Columns(col =>
                                   {
                                       col.ForeignKey(c => c.IdProduto, (System.Collections.IEnumerable)ViewData["produtos"], "Id", "Titulo").Title("Produto");
                                       col.Bound(c => c.Valor).Title("Valor do produto");
                                       col.Bound(c => c.ValorComDesconto).Title("Valor com desconto");
                                   }).Sortable().Navigatable().Editable(e => e.Mode(GridEditMode.InCell)).ToolBar(t => { t.Save(); }).HtmlAttributes(new { style = "width: 100%;" }).Pageable(page => page.Refresh(true).ButtonCount(5).Messages(c =>
                                   {
                                       c.ItemsPerPage("Itens por página");
                                       c.Last("Último");
                                       c.Next("Próximo");
                                       c.First("Primeira");
                                       c.Refresh("Recarregar");
                                       c.Display("{0} - {1} de {2} itens");
                                   }))
                                                                                               .DataSource(data => data.Ajax().PageSize(153).Events(events => events.Error("error_handler")).Model(model => model.Id(p => p.Id))
                                                                                                   .Read(read => read.Action("ItensDetails_Read", "ItensDetails", new { Id = Model.Id }))
                                                                                                   .Update(update => update.Action("ItensDetails_UpdateAsync", "ItensDetails")).Batch(true)))
    </div>
    <div class="info-bar col-md-3">
        @{
            OtherOptions otherOptions = new OtherOptions
            {
                Descricao = "Veja opções relacionadas com a apresentação de itens.",
                FeedbackEChamadoID = "ItemFamilia",
                OpcoesRelacionadas = new Links[] {
                    new Links{
                        Titulo = "Adicionar família",
                        Url = "/Familias/Create"
                    },
                    new Links{
                        Titulo = "Adicionar estado de produto",
                        Url = "/Estados/Create"
                    },
                    new Links{
                        Titulo = "Adicionar produto",
                        Url = "/Produtos/Create"
                    }
                }
            };
        }
        @Html.Partial("AppOtherOptions", otherOptions)
    </div>
</div>