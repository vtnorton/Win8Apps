@using ProjectCachoeiro.Web.Extensions
@model string;

@{
    int idCliente = 0;
    bool _temCliente = Model.Contains("CLIENTE");
    string itemtemplate;
    string _action;
    if (_temCliente)
    {
        _action = "ReadCliente";
        itemtemplate = "TemplateDetalhesIndividualSemCliente";
        idCliente = int.Parse(Model.GetBetween("CLIENTE=", ";"));
    }
    else
    {
        _action = "Read";
        itemtemplate = "TemplateDetalhesIndividual";
    }

}
@(Html.Kendo().Grid<ProjectCachoeiro.Web.Comercial.Proposta>().Name("Proposta").Columns(col =>
        {
            col.Bound(c => c.Numero);
            col.ForeignKey(c => c.IdCliente, (System.Collections.IEnumerable)ViewData["clientes"], "Id", "GetName").Title("Cliente");
            col.Bound(p => p.Id).ClientTemplate(@"
                <a class='k-button k-button-icontext k-grid-Edit' href='/Propostas/Editar/#=Id#'>
                    <span class='k-icon k-i-hyperlink-open'></span> Editar
                </a>
                <a class='k-button k-button-icontext k-grid-Details' href='/Propostas/Detalhes/#=Id#'>
                    <span class='k-icon k-i-hyperlink'></span> Mais
                </a>").Title("Opções").Width(189).Editable("noEdit")
                        .Filterable(false).HtmlAttributes(new { @style = "padding-right:0" });
            col.Command(command =>
            {
                command.Destroy().Text("Apagar");
            }).Width(100).HtmlAttributes(new { @style = "padding-left:0" });
        }).ClientDetailTemplateId(itemtemplate).NoRecords(n => n.TemplateId("NoRecordAddOne"))
        .Sortable().Filterable(mess =>
        {
            mess.Operators(ope =>
            {
                ope.ForDate(str => str.IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsLessThanOrEqualTo("é menor ou igual").IsLessThan("é menor que").IsGreaterThanOrEqualTo("é maior ou igual a").IsGreaterThan("é maior que").IsEqualTo("é igual a"));
                ope.ForEnums(str => str.IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsEqualTo("é igual a"));
                ope.ForNumber(str => str.IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsLessThanOrEqualTo("é menor ou igual").IsLessThan("é menor que").IsGreaterThanOrEqualTo("é maior ou igual a").IsGreaterThan("é maior que").IsEqualTo("é igual a"));
                ope.ForString(str => str.StartsWith("começa com").Contains("contem").DoesNotContain("não contem").EndsWith("termina com").IsNull("é nulo").IsNotNull("não é nulo").IsNotEqualTo("não é igual a").IsNotEmpty("não em branco").IsEqualTo("é igual a").IsNotEqualTo("não é igual a").IsEmpty("esta em branco"));
            });
            mess.Messages(c => { c.Clear("Limpar"); c.And("e"); c.Cancel("Cancelar"); c.IsFalse("é falso"); c.IsTrue("é verdadeiro"); c.Or("ou"); c.Search("Pesquisar"); c.SelectValue("Selecionar valor"); c.Filter("Filtrar"); c.SelectValue("Selecionar"); c.Info("Mostrar itens que"); });
        }).Pageable(page => page.Refresh(true).ButtonCount(5).Messages(c =>
        {
            c.ItemsPerPage("Itens por página");
            c.Last("Último");
            c.Next("Próximo");
            c.First("Primeira");
            c.Refresh("Recarregar");
            c.Display("{0} - {1} de {2} itens");
        })).Editable(e => e.Mode(GridEditMode.InCell)).Events(ev => ev.CellClose("CellCloseScript")).DataSource(
                    data => data.Ajax().ServerOperation(false).Events(events => events.Error("error_handler"))
                                .Model(model => model.Id(p => p.Id))
                                .Read(read => read.Action(_action, "Propostas", new { Id = idCliente }))
                                .Update("Update", "Propostas")
                                .Destroy("Destroy", "Propostas")))

<script>
    function noEdit(dataItem) {
        return dataItem.Id == 0;
    }
    function CellCloseScript(e) {
        this.dataSource.sync()
    }
</script>

<script id="NoRecordAddOne" type="text/x-kendo-template">
    <div style="padding:20px 50px">
        <p class="text-center">Não há nenhuma proposta cadastrada aqui aqui. Você pode adicionar novas propostas pelo botão abaixo.</p>
        <br />
        <a href="/Propostas/Criar" class="btn"><i class="fa fa-plus-square-o"></i> Criar proposta</a>
        <br />
    </div>
</script>

<script id="TemplateDetalhesIndividual" type="text/x-kendo-tmpl">
    @{
        int id = 1003;
    }
    @(Html.Kendo().TabStrip().Name("proposta_detalhes_tabstrip_#=Id#").Items(items =>
                        {
                            items.Add().Selected(true).Text("Itens na proposta").Content(@<text>
                                @await Html.PartialAsync("~/Views/Shared/Templates/GridProposta_Item.cshtml", id)
                            </text>);
                            items.Add().Text("Cliente").Content(@<text>
                                @*@await Html.PartialAsync("~/Views/Shared/Templates/GridPropposta_Cliente.cshtml")*@
                            </text>);
                        }).ToClientTemplate())
</script>
<script id="TemplateDetalhesIndividualSemCliente" type="text/x-kendo-tmpl">
    @{ 
        int idsm = 1003;
    }
    @(Html.Kendo().TabStrip().Name("proposta_detalhes_tabstrip_#=Id#").Items(items =>
        {
            items.Add().Selected(true).Text("Itens na proposta").Content(@<text>
                @await Html.PartialAsync("~/Views/Shared/Templates/GridProposta_Item.cshtml", idsm)
            </text>);
        }).ToClientTemplate())
</script>