<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Sobre mim</value>
  </data>
  <data name="AboutParagraph" xml:space="preserve">
    <value>Eu tenho essa paixão de criar coisas novas. Eu não me importo se é um software, se é um livro ou se é alguma coisa de design. Eu simplesmente não consigo parar de criar, não consigo parar de imaginar. Eu crio coisas para viver. &lt;/ p&gt;
             &lt;p&gt; Não sei viver sem tecnologia, estou fazendo o mundo um lugar melhor, um bit de cada vez. Basta me dar o código fonte do mundo e está feito! &lt;/ p&gt;
             &lt;p&gt; Todos somos os mesmos, todo mundo tem a mesma oportunidade quando se conectam com a internet. Espalhar essas palavras pode ser difícil, mas uma vez que você endenta elas, você sabe, é verdade.</value>
    <comment>I have this passion of creating new things. I don't care if it's a software, if it's a book or a design thing. I just can't stop creating, can't stop imagining. I create things for living.&lt;/p&gt;
            &lt;p&gt;Don't know live without technologie, I'm making the world a better place, one bit at time. Just give the world source code and it's done!&lt;/p&gt;
            &lt;p&gt;Everybody is the same, everybody has the same oportunity when they connect with the internet. Spreading this words can be tuff, but once you undestand it, you know, it's true.</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Eu não sonho, eu faço um monte de coisas. Criador, Windows Developer, Windows Insider MVP • Objetivo da vida: ser o #Ninjacat</value>
  </data>
  <data name="Development" xml:space="preserve">
    <value>Desenvolvimento</value>
  </data>
  <data name="IAlsoKnowDescription" xml:space="preserve">
    <value>Eu tive a chance de aprender algumas outras habilidades, mas isso não é como: "ohhh ele sabe o que ele está falando" ou "a obra-prima do meu conhecimento". Eu simplesmente sei essas coisas porque eu trabalhei com, em seguida, por mais de um ano.</value>
  </data>
  <data name="IAlsoKnowTitle" xml:space="preserve">
    <value>Eu também sei... </value>
  </data>
  <data name="LogOfMyLifeDescription" xml:space="preserve">
    <value>Over the last years I have been collecting some great points in the RPG of life, here is my log:</value>
  </data>
  <data name="LogOfMyLifeTitle" xml:space="preserve">
    <value>Log da minha vida</value>
  </data>
  <data name="SkillsDescription" xml:space="preserve">
    <value>Over the past 10 years coding, I got to get some skills.</value>
  </data>
  <data name="SkillsTitle" xml:space="preserve">
    <value>Minhas habilidades</value>
  </data>
  <data name="SubLink1" xml:space="preserve">
    <value>Siga-me no Twitter (@vt_norton)</value>
  </data>
  <data name="SubLink2" xml:space="preserve">
    <value>Testemunhos</value>
  </data>
  <data name="SubLink3" xml:space="preserve">
    <value>Habilidades</value>
  </data>
  <data name="SubLink4" xml:space="preserve">
    <value>Eu também sei... </value>
  </data>
  <data name="SubLink5" xml:space="preserve">
    <value>Log da minha vida</value>
  </data>
  <data name="TerryTestimonial" xml:space="preserve">
    <value>"Vítor, do Brasil, é um desenvolvedor de software ativo, ele usa um Dell Inspiron para construir o Formula - Universal Code Editor  - um aplicativo de Universal Windows muito bem classificado na loja. Ele começou criar eventos no Brasil que ensinam a outras pessoas como codificar, ensinando como o feedback dos usuários é crítico no processo de engenharia. Vitor é um criador que está mudando o mundo através dos aplicativos que ele constrói e construindo uma comunidade de outras pessoas para serem criadores ".</value>
    <comment>"Vítor, from Brazil is an active software developer. He uses a Dell Inspiron to build the Formula - Universal code editor, a very highly rated Universal Windows App. He started hosting events in Brazil that teach other people how to code, teaching them how critical user feedback is as part of the engineering process. Vitor is a creator who is changing the world through the apps he builds and by building a community of other people to be creators themselves."</comment>
  </data>
  <data name="TestimonialTitle" xml:space="preserve">
    <value>O que outras pessoas dizem sobre mim</value>
  </data>
  <data name="WebDevelopment" xml:space="preserve">
    <value>Desenvolvimento Web</value>
  </data>
  <data name="WindowsDevelopment" xml:space="preserve">
    <value>Desenvolvimento para Windows</value>
  </data>
</root>