<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About me</value>
  </data>
  <data name="AboutParagraph" xml:space="preserve">
    <value>I have this passion of creating new things. I don't care if it's a software, if it's a book or a design thing. I just can't stop creating, can't stop imagining. I create things for living.&lt;/p&gt;
            &lt;p&gt;Don't know live without technologie, I'm making the world a better place, one bit at time. Just give the world source code and it's done!&lt;/p&gt;
            &lt;p&gt;Everybody is the same, everybody has the same oportunity when they connect with the internet. Spreading this words can be tough, but once you understand it, you know, it's true.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>I don't dream, I do a lot of things. Creator, Windows Developer, Windows Insider MVP • Live goal: be #Ninjacat</value>
  </data>
  <data name="Development" xml:space="preserve">
    <value>Development</value>
  </data>
  <data name="IAlsoKnowDescription" xml:space="preserve">
    <value>I got the chance to learn some others skills, but this isn't like: "ohhh he do know what he is talking about" or "the masterpiece of my knowledge". I simply know this stuff because I worked with then for more than one year.</value>
  </data>
  <data name="IAlsoKnowTitle" xml:space="preserve">
    <value>I also know...</value>
  </data>
  <data name="LogOfMyLifeDescription" xml:space="preserve">
    <value>Over the last years I have been collecting some great points in the RPG of life, here is my log:</value>
  </data>
  <data name="LogOfMyLifeTitle" xml:space="preserve">
    <value>Log of my life</value>
  </data>
  <data name="SkillsDescription" xml:space="preserve">
    <value>Over the past 10 years coding, I got to get some skills.</value>
  </data>
  <data name="SkillsTitle" xml:space="preserve">
    <value>My skills</value>
  </data>
  <data name="SubLink1" xml:space="preserve">
    <value>Follow me on Twitter (@vt_norton)</value>
  </data>
  <data name="SubLink2" xml:space="preserve">
    <value>Testimonial</value>
  </data>
  <data name="SubLink3" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="SubLink4" xml:space="preserve">
    <value>I also know...</value>
  </data>
  <data name="SubLink5" xml:space="preserve">
    <value>Log of my life</value>
  </data>
  <data name="TerryTestimonial" xml:space="preserve">
    <value>"Vítor, from Brazil is an active software developer. He uses a Dell Inspiron to build the Formula - Universal code editor, a very highly rated Universal Windows App. He started hosting events in Brazil that teach other people how to code, teaching them how critical user feedback is as part of the engineering process. Vitor is a creator who is changing the world through the apps he builds and by building a community of other people to be creators themselves."</value>
  </data>
  <data name="TestimonialTitle" xml:space="preserve">
    <value>What people say about me</value>
  </data>
  <data name="WebDevelopment" xml:space="preserve">
    <value>Web development</value>
  </data>
  <data name="WindowsDevelopment" xml:space="preserve">
    <value>Windows development</value>
  </data>
</root>